# coding: utf-8

"""
    ProjectsService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.project_time_log_dto import ProjectTimeLogDto

class TestProjectTimeLogDto(unittest.TestCase):
    """ProjectTimeLogDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectTimeLogDto:
        """Test ProjectTimeLogDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectTimeLogDto`
        """
        model = ProjectTimeLogDto()
        if include_optional:
            return ProjectTimeLogDto(
                id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                project_id = '',
                project_task_id = '',
                task_category_id = '',
                project_period_id = '',
                responsible_contact_id = '',
                creator_contact_id = '',
                record_type = 0,
                time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_span = 'PT2H30M',
                log_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                comments = '',
                type = ''
            )
        else:
            return ProjectTimeLogDto(
        )
        """

    def testProjectTimeLogDto(self):
        """Test ProjectTimeLogDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
