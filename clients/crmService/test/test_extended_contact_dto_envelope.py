# coding: utf-8

"""
    CrmService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.extended_contact_dto_envelope import ExtendedContactDtoEnvelope

class TestExtendedContactDtoEnvelope(unittest.TestCase):
    """ExtendedContactDtoEnvelope unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtendedContactDtoEnvelope:
        """Test ExtendedContactDtoEnvelope
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtendedContactDtoEnvelope`
        """
        model = ExtendedContactDtoEnvelope()
        if include_optional:
            return ExtendedContactDtoEnvelope(
                is_success = True,
                error_message = '',
                correlation_id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                activity_id = '',
                result = openapi_client.models.extended_contact_dto.ExtendedContactDto(
                    id = '', 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    qualified_name = '', 
                    tenant_id = '', 
                    type = 0, 
                    public_name = '', 
                    first_name = '', 
                    last_name = '', 
                    job_title = '', 
                    cover_url = '', 
                    avatar_url = '', 
                    country_id = '', 
                    timezone_id = '', 
                    language_id = '', 
                    social_profile_id = '', 
                    web_url = '', 
                    git_hub_url = '', 
                    twitch_url = '', 
                    reddit_url = '', 
                    tik_tok_url = '', 
                    website_url = '', 
                    twitter_url = '', 
                    facebook_url = '', 
                    you_tube_url = '', 
                    linked_in_url = '', 
                    instagram_url = '', 
                    github_username = '', 
                    duns = '', 
                    tax_id = '', 
                    email = '', 
                    about = '', 
                    street = '', 
                    cart_id = '', 
                    city_id = '', 
                    zip_code = '', 
                    state_id = '', 
                    wallet_id = '', 
                    fax_number = '', 
                    postal_code = '', 
                    currency_id = '', 
                    street_line1 = '', 
                    street_line2 = '', 
                    territory_id = '', 
                    mobile_phone = '', 
                    enrollment_id = '', 
                    annual_revenue = '', 
                    related_user_id = '', 
                    business_phone = '', 
                    owner_contact_id = '', 
                    related_tenant_id = '', 
                    activity_feed_id = '', 
                    parent_contact_id = '', 
                    identity_provider = '', 
                    partner_profile_id = '', 
                    primary_contact_id = '', 
                    active_directory_id = '', 
                    identity_provider_access_token = '', 
                    birthday = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cart = openapi_client.models.cart_dto.CartDto(
                        id = '', 
                        ip = '', 
                        type = '', 
                        total = 1.337, 
                        taxes = 1.337, 
                        freight = 1.337, 
                        sub_total = 1.337, 
                        currency_id = '', 
                        country_id = '', 
                        item_cart_records_count = 56, 
                        item_to_compare_records_count = 56, ), 
                    wallet = openapi_client.models.wallet_dto.WalletDto(
                        id = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        balance = 1.337, 
                        crypto_balance = 1.337, 
                        test_mode = True, 
                        verified = True, 
                        type = '', 
                        currency_id = '', 
                        forex_rate = 1.337, 
                        balance_in_usd = 1.337, 
                        main_net_ether_balance = 1.337, 
                        ethereum_address = '', 
                        ethereum_public_key = '', 
                        ethereum_private_key = '', 
                        rolling_reserve_percent = 1.337, ), 
                    social_profile = openapi_client.models.social_profile_dto.SocialProfileDto(
                        id = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        about = '', 
                        cover = '', 
                        avatar = '', 
                        country_id = '', 
                        country_name = '', 
                        identity_id = '', 
                        follows_count = 56, 
                        messages_count = 56, 
                        followers_count = 56, 
                        notifications_count = 56, 
                        unread_notifications_count = 56, 
                        unread_messages_count = 56, 
                        type = 0, 
                        social_feed_id = '', 
                        twitter_url = '', 
                        facebook_url = '', 
                        linked_in_url = '', 
                        youtube_url = '', 
                        github_url = '', 
                        pinterest_url = '', 
                        dribble_url = '', 
                        domain = '', 
                        notes = '', ), 
                    parent_contact = openapi_client.models.simple_contact_dto.SimpleContactDto(
                        id = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        qualified_name = '', 
                        tenant_id = '', 
                        type = 0, 
                        public_name = '', 
                        first_name = '', 
                        last_name = '', 
                        job_title = '', 
                        cover_url = '', 
                        avatar_url = '', 
                        country_id = '', 
                        timezone_id = '', 
                        language_id = '', 
                        social_profile_id = '', 
                        web_url = '', 
                        git_hub_url = '', 
                        twitch_url = '', 
                        reddit_url = '', 
                        tik_tok_url = '', 
                        website_url = '', 
                        twitter_url = '', 
                        facebook_url = '', 
                        you_tube_url = '', 
                        linked_in_url = '', 
                        instagram_url = '', 
                        github_username = '', ), 
                    primary_contact = openapi_client.models.simple_contact_dto.SimpleContactDto(
                        id = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        qualified_name = '', 
                        tenant_id = '', 
                        type = 0, 
                        public_name = '', 
                        first_name = '', 
                        last_name = '', 
                        job_title = '', 
                        cover_url = '', 
                        avatar_url = '', 
                        country_id = '', 
                        timezone_id = '', 
                        language_id = '', 
                        social_profile_id = '', 
                        web_url = '', 
                        git_hub_url = '', 
                        twitch_url = '', 
                        reddit_url = '', 
                        tik_tok_url = '', 
                        website_url = '', 
                        twitter_url = '', 
                        facebook_url = '', 
                        you_tube_url = '', 
                        linked_in_url = '', 
                        instagram_url = '', 
                        github_username = '', ), )
            )
        else:
            return ExtendedContactDtoEnvelope(
        )
        """

    def testExtendedContactDtoEnvelope(self):
        """Test ExtendedContactDtoEnvelope"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
