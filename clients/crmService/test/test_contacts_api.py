# coding: utf-8

"""
    CrmService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.contacts_api import ContactsApi


class TestContactsApi(unittest.TestCase):
    """ContactsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ContactsApi()

    def tearDown(self) -> None:
        pass

    def test_create_contact_async(self) -> None:
        """Test case for create_contact_async

        Create a new contact
        """
        pass

    def test_delete_contact_async(self) -> None:
        """Test case for delete_contact_async

        Delete a contact
        """
        pass

    def test_get_business_owned_individual_async(self) -> None:
        """Test case for get_business_owned_individual_async

        Get a Contact of type Individual by ID
        """
        pass

    def test_get_business_owned_individuals_async(self) -> None:
        """Test case for get_business_owned_individuals_async

        Get all contacts of type individual
        """
        pass

    def test_get_business_owned_individuals_count_async(self) -> None:
        """Test case for get_business_owned_individuals_count_async

        Get all contacts of type individual count
        """
        pass

    def test_get_business_owned_organization_async(self) -> None:
        """Test case for get_business_owned_organization_async

        Get a Contact of type Organization by ID
        """
        pass

    def test_get_business_owned_organizations_async(self) -> None:
        """Test case for get_business_owned_organizations_async

        Get all contacts of type organization
        """
        pass

    def test_get_business_owned_organizations_count_async(self) -> None:
        """Test case for get_business_owned_organizations_count_async

        Get all contacts of type organization count
        """
        pass

    def test_get_contact_async(self) -> None:
        """Test case for get_contact_async

        Get a contact by ID
        """
        pass

    def test_get_contact_avatar_async(self) -> None:
        """Test case for get_contact_avatar_async

        Get a contact's avatar
        """
        pass

    def test_get_contact_cart_async(self) -> None:
        """Test case for get_contact_cart_async

        Get a contact's cart
        """
        pass

    def test_get_contact_profiles_async(self) -> None:
        """Test case for get_contact_profiles_async

        Get a contact's social profiles
        """
        pass

    def test_get_contact_social_profile_async(self) -> None:
        """Test case for get_contact_social_profile_async

        Get a contact's social profile
        """
        pass

    def test_get_contact_wallet_async(self) -> None:
        """Test case for get_contact_wallet_async

        Get a contact's wallet
        """
        pass

    def test_get_contacts_async(self) -> None:
        """Test case for get_contacts_async

        Get all business owned contacts
        """
        pass

    def test_get_contacts_count_async(self) -> None:
        """Test case for get_contacts_count_async

        Get all business owned contacts count
        """
        pass

    def test_get_extended_business_owned_individuals_async(self) -> None:
        """Test case for get_extended_business_owned_individuals_async

        Get all contacts of type individual
        """
        pass

    def test_get_extended_business_owned_organizations_async(self) -> None:
        """Test case for get_extended_business_owned_organizations_async

        Get all contacts of type organization
        """
        pass

    def test_get_extended_contact_async(self) -> None:
        """Test case for get_extended_contact_async

        Get a contact by ID
        """
        pass

    def test_get_extended_contacts_async(self) -> None:
        """Test case for get_extended_contacts_async

        Get all business owned contacts
        """
        pass

    def test_get_individual_related_individuals_async(self) -> None:
        """Test case for get_individual_related_individuals_async

        Get individual related individuals
        """
        pass

    def test_get_individual_related_organizations_async(self) -> None:
        """Test case for get_individual_related_organizations_async

        Get individual related organizations
        """
        pass

    def test_get_organization_related_individuals_async(self) -> None:
        """Test case for get_organization_related_individuals_async

        Get organization related individuals
        """
        pass

    def test_get_organization_related_organizations_async(self) -> None:
        """Test case for get_organization_related_organizations_async

        Get organization related organizations
        """
        pass

    def test_patch_contact_async(self) -> None:
        """Test case for patch_contact_async

        Patch a contact
        """
        pass

    def test_update_contact_async(self) -> None:
        """Test case for update_contact_async

        Update a contact
        """
        pass

    def test_update_contact_avatar_async(self) -> None:
        """Test case for update_contact_avatar_async

        Update a contact's avatar
        """
        pass

    def test_upsert_tenant_onto_another_tenant_contact_list_async(self) -> None:
        """Test case for upsert_tenant_onto_another_tenant_contact_list_async

        Upsert a tenant onto another tenant's contact list
        """
        pass

    def test_upsert_user_onto_another_tenant_contact_list_async(self) -> None:
        """Test case for upsert_user_onto_another_tenant_contact_list_async

        Upsert a user onto a tenant's contact list
        """
        pass


if __name__ == '__main__':
    unittest.main()
