# coding: utf-8

"""
    SystemService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.extended_tenant_dto import ExtendedTenantDto

class TestExtendedTenantDto(unittest.TestCase):
    """ExtendedTenantDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtendedTenantDto:
        """Test ExtendedTenantDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtendedTenantDto`
        """
        model = ExtendedTenantDto()
        if include_optional:
            return ExtendedTenantDto(
                id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                qualified_name = '',
                tax_id = '',
                about = '',
                wallet_id = '',
                social_feed_id = '',
                business_industry_id = '',
                business_segment_id = '',
                social_profile_id = '',
                language_id = '',
                name = '',
                duns = '',
                slogan = '',
                legal_name = '',
                cover_url = '',
                avatar_url = '',
                cart_id = '',
                currency_id = '',
                timezone_id = '',
                country_id = '',
                state_id = '',
                city_id = '',
                email = '',
                phone = '',
                web_url = '',
                facebook_url = '',
                twitter_url = '',
                git_hub_url = '',
                linked_in_url = '',
                instagram_url = '',
                you_tube_url = '',
                whats_app_number = '',
                support_phone_number = '',
                verified = True,
                business_name = '',
                business_legal_name = '',
                twitter_username = '',
                cart = openapi_client.models.cart_dto.CartDto(
                    id = '', 
                    ip = '', 
                    type = '', 
                    total = 1.337, 
                    taxes = 1.337, 
                    freight = 1.337, 
                    sub_total = 1.337, 
                    currency_id = '', 
                    country_id = '', 
                    item_cart_records_count = 56, 
                    item_to_compare_records_count = 56, ),
                wallet = openapi_client.models.wallet_dto.WalletDto(
                    id = '', 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    balance = 1.337, 
                    crypto_balance = 1.337, 
                    test_mode = True, 
                    verified = True, 
                    type = '', 
                    currency_id = '', 
                    forex_rate = 1.337, 
                    balance_in_usd = 1.337, 
                    main_net_ether_balance = 1.337, 
                    ethereum_address = '', 
                    ethereum_public_key = '', 
                    ethereum_private_key = '', 
                    rolling_reserve_percent = 1.337, ),
                social_profile = openapi_client.models.social_profile_dto.SocialProfileDto(
                    id = '', 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '', 
                    about = '', 
                    cover = '', 
                    avatar = '', 
                    country_id = '', 
                    country_name = '', 
                    identity_id = '', 
                    follows_count = 56, 
                    messages_count = 56, 
                    followers_count = 56, 
                    notifications_count = 56, 
                    unread_notifications_count = 56, 
                    unread_messages_count = 56, 
                    type = 0, 
                    social_feed_id = '', 
                    twitter_url = '', 
                    facebook_url = '', 
                    linked_in_url = '', 
                    youtube_url = '', 
                    github_url = '', 
                    pinterest_url = '', 
                    dribble_url = '', 
                    domain = '', 
                    notes = '', )
            )
        else:
            return ExtendedTenantDto(
        )
        """

    def testExtendedTenantDto(self):
        """Test ExtendedTenantDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
