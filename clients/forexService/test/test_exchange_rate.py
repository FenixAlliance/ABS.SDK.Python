# coding: utf-8

"""
    ForexService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.exchange_rate import ExchangeRate

class TestExchangeRate(unittest.TestCase):
    """ExchangeRate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExchangeRate:
        """Test ExchangeRate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExchangeRate`
        """
        model = ExchangeRate()
        if include_optional:
            return ExchangeRate(
                source = openapi_client.models.money.Money(
                    amount = 1.337, 
                    currency = openapi_client.models.currency.Currency(
                        code = '', 
                        country = '', ), ),
                target = openapi_client.models.money.Money(
                    amount = 1.337, 
                    currency = openapi_client.models.currency.Currency(
                        code = '', 
                        country = '', ), ),
                rate = openapi_client.models.money.Money(
                    amount = 1.337, 
                    currency = openapi_client.models.currency.Currency(
                        code = '', 
                        country = '', ), )
            )
        else:
            return ExchangeRate(
        )
        """

    def testExchangeRate(self):
        """Test ExchangeRate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
