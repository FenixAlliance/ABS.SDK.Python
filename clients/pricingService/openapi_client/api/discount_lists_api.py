# coding: utf-8

"""
    PricingService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import StrictStr
from typing import Optional
from openapi_client.models.discount_create_dto import DiscountCreateDto
from openapi_client.models.discount_dto_envelope import DiscountDtoEnvelope
from openapi_client.models.discount_dto_list_envelope import DiscountDtoListEnvelope
from openapi_client.models.discount_list_create_dto import DiscountListCreateDto
from openapi_client.models.discount_list_dto_envelope import DiscountListDtoEnvelope
from openapi_client.models.discount_list_dto_list_envelope import DiscountListDtoListEnvelope
from openapi_client.models.discount_list_update_dto import DiscountListUpdateDto
from openapi_client.models.discount_update_dto import DiscountUpdateDto
from openapi_client.models.empty_envelope import EmptyEnvelope
from openapi_client.models.int32_envelope import Int32Envelope

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class DiscountListsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def api_v2_pricing_service_discount_lists_count_get(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Int32Envelope:
        """api_v2_pricing_service_discount_lists_count_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_count_get_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Int32Envelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_count_get_with_http_info(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Int32Envelope]:
        """api_v2_pricing_service_discount_lists_count_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_count_get_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Int32Envelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_count_get_without_preload_content(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_count_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_count_get_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Int32Envelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_count_get_serialize(
        self,
        tenant_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/PricingService/DiscountLists/Count',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_delete(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmptyEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_delete


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_delete_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_delete_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmptyEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_delete


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_delete_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_delete_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_delete


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_delete_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_delete_serialize(
        self,
        tenant_id,
        discount_list_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Int32Envelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Int32Envelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Int32Envelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Int32Envelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Int32Envelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_discounts_count_get_serialize(
        self,
        tenant_id,
        discount_list_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}/Discounts/Count',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmptyEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmptyEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_delete_serialize(
        self,
        tenant_id,
        discount_list_id,
        discount_list_entry_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        if discount_list_entry_id is not None:
            _path_params['discountListEntryId'] = discount_list_entry_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}/Discounts/{discountListEntryId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_update_dto: Optional[DiscountUpdateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmptyEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_update_dto:
        :type discount_update_dto: DiscountUpdateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_update_dto=discount_update_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_update_dto: Optional[DiscountUpdateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmptyEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_update_dto:
        :type discount_update_dto: DiscountUpdateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_update_dto=discount_update_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_update_dto: Optional[DiscountUpdateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_update_dto:
        :type discount_update_dto: DiscountUpdateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_update_dto=discount_update_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_discounts_discount_list_entry_id_put_serialize(
        self,
        tenant_id,
        discount_list_id,
        discount_list_entry_id,
        api_version,
        x_api_version,
        discount_update_dto,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        if discount_list_entry_id is not None:
            _path_params['discountListEntryId'] = discount_list_entry_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter
        if discount_update_dto is not None:
            _body_params = discount_update_dto


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json', 
                        'application/xml'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}/Discounts/{discountListEntryId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_get(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DiscountDtoListEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountDtoListEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_get_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DiscountDtoListEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountDtoListEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_get_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountDtoListEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_discounts_get_serialize(
        self,
        tenant_id,
        discount_list_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}/Discounts',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_post(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_create_dto: Optional[DiscountCreateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmptyEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_post


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_create_dto:
        :type discount_create_dto: DiscountCreateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_post_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_create_dto=discount_create_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_post_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_create_dto: Optional[DiscountCreateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmptyEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_post


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_create_dto:
        :type discount_create_dto: DiscountCreateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_post_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_create_dto=discount_create_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_discounts_post_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_create_dto: Optional[DiscountCreateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_discounts_post


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_create_dto:
        :type discount_create_dto: DiscountCreateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_discounts_post_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_create_dto=discount_create_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_discounts_post_serialize(
        self,
        tenant_id,
        discount_list_id,
        api_version,
        x_api_version,
        discount_create_dto,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter
        if discount_create_dto is not None:
            _body_params = discount_create_dto


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json', 
                        'application/xml'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}/Discounts',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_get(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DiscountListDtoEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountListDtoEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_get_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DiscountListDtoEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountListDtoEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_get_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_get_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountListDtoEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_get_serialize(
        self,
        tenant_id,
        discount_list_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_put(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_list_update_dto: Optional[DiscountListUpdateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmptyEnvelope:
        """api_v2_pricing_service_discount_lists_discount_list_id_put


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_list_update_dto:
        :type discount_list_update_dto: DiscountListUpdateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_put_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_list_update_dto=discount_list_update_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_put_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_list_update_dto: Optional[DiscountListUpdateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmptyEnvelope]:
        """api_v2_pricing_service_discount_lists_discount_list_id_put


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_list_update_dto:
        :type discount_list_update_dto: DiscountListUpdateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_put_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_list_update_dto=discount_list_update_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_discount_list_id_put_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_list_update_dto: Optional[DiscountListUpdateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_discount_list_id_put


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_list_update_dto:
        :type discount_list_update_dto: DiscountListUpdateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_discount_list_id_put_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_list_update_dto=discount_list_update_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_discount_list_id_put_serialize(
        self,
        tenant_id,
        discount_list_id,
        api_version,
        x_api_version,
        discount_list_update_dto,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter
        if discount_list_update_dto is not None:
            _body_params = discount_list_update_dto


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json', 
                        'application/xml'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_get(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DiscountListDtoListEnvelope:
        """api_v2_pricing_service_discount_lists_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_get_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountListDtoListEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_get_with_http_info(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DiscountListDtoListEnvelope]:
        """api_v2_pricing_service_discount_lists_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_get_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountListDtoListEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_get_without_preload_content(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_get


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_get_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountListDtoListEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_get_serialize(
        self,
        tenant_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/PricingService/DiscountLists',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api_v2_pricing_service_discount_lists_post(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_list_create_dto: Optional[DiscountListCreateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EmptyEnvelope:
        """api_v2_pricing_service_discount_lists_post


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_list_create_dto:
        :type discount_list_create_dto: DiscountListCreateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_post_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_list_create_dto=discount_list_create_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api_v2_pricing_service_discount_lists_post_with_http_info(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_list_create_dto: Optional[DiscountListCreateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EmptyEnvelope]:
        """api_v2_pricing_service_discount_lists_post


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_list_create_dto:
        :type discount_list_create_dto: DiscountListCreateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_post_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_list_create_dto=discount_list_create_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api_v2_pricing_service_discount_lists_post_without_preload_content(
        self,
        tenant_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        discount_list_create_dto: Optional[DiscountListCreateDto] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api_v2_pricing_service_discount_lists_post


        :param tenant_id: (required)
        :type tenant_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param discount_list_create_dto:
        :type discount_list_create_dto: DiscountListCreateDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api_v2_pricing_service_discount_lists_post_serialize(
            tenant_id=tenant_id,
            api_version=api_version,
            x_api_version=x_api_version,
            discount_list_create_dto=discount_list_create_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EmptyEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api_v2_pricing_service_discount_lists_post_serialize(
        self,
        tenant_id,
        api_version,
        x_api_version,
        discount_list_create_dto,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter
        if discount_list_create_dto is not None:
            _body_params = discount_list_create_dto


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json', 
                        'application/xml'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/v2/PricingService/DiscountLists',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_discount_list_entry(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DiscountDtoEnvelope:
        """get_discount_list_entry


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_discount_list_entry_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountDtoEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_discount_list_entry_with_http_info(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DiscountDtoEnvelope]:
        """get_discount_list_entry


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_discount_list_entry_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountDtoEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_discount_list_entry_without_preload_content(
        self,
        tenant_id: StrictStr,
        discount_list_id: StrictStr,
        discount_list_entry_id: StrictStr,
        api_version: Optional[StrictStr] = None,
        x_api_version: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """get_discount_list_entry


        :param tenant_id: (required)
        :type tenant_id: str
        :param discount_list_id: (required)
        :type discount_list_id: str
        :param discount_list_entry_id: (required)
        :type discount_list_entry_id: str
        :param api_version:
        :type api_version: str
        :param x_api_version:
        :type x_api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_discount_list_entry_serialize(
            tenant_id=tenant_id,
            discount_list_id=discount_list_id,
            discount_list_entry_id=discount_list_entry_id,
            api_version=api_version,
            x_api_version=x_api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DiscountDtoEnvelope",
            '400': "ErrorEnvelope",
            '403': "ErrorEnvelope",
            '401': "ErrorEnvelope",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_discount_list_entry_serialize(
        self,
        tenant_id,
        discount_list_id,
        discount_list_entry_id,
        api_version,
        x_api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if discount_list_id is not None:
            _path_params['discountListId'] = discount_list_id
        if discount_list_entry_id is not None:
            _path_params['discountListEntryId'] = discount_list_entry_id
        # process the query parameters
        if tenant_id is not None:
            
            _query_params.append(('tenantId', tenant_id))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if x_api_version is not None:
            _header_params['x-api-version'] = x_api_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/PricingService/DiscountLists/{discountListId}/Discounts/{discountListEntryId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


