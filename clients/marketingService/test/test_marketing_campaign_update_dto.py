# coding: utf-8

"""
    MarketingService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.1.4089
    Contact: support@fenix-alliance.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.marketing_campaign_update_dto import MarketingCampaignUpdateDto

class TestMarketingCampaignUpdateDto(unittest.TestCase):
    """MarketingCampaignUpdateDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarketingCampaignUpdateDto:
        """Test MarketingCampaignUpdateDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarketingCampaignUpdateDto`
        """
        model = MarketingCampaignUpdateDto()
        if include_optional:
            return MarketingCampaignUpdateDto(
                name = '',
                offer = '',
                active = True,
                proposed_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                proposed_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                actual_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                actual_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                code = '',
                allocated_budget = 1.337,
                activity_cost = 1.337,
                misc_cost = 1.337,
                expected_response_percent = 1.337,
                marketing_area_id = '',
                currency_id = '',
                tenant_id = '',
                enrolment_id = ''
            )
        else:
            return MarketingCampaignUpdateDto(
        )
        """

    def testMarketingCampaignUpdateDto(self):
        """Test MarketingCampaignUpdateDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
